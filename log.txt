
Lexical analysis:
program g;
0 39.0 24 
var u, v, max, min: real;
1 39.1 25 39.2 25 39.3 25 39.4 29 3 24 
begin
6 
    read(u,v);
16 27 39.1 25 39.2 28 24 
    max:=10;
39.3 18 40.10 24 
    min:=0;
39.4 18 40.0 24 
    if u>v then
8 39.1 32 39.2 10 
    begin
6 
        if u>max then max:=u;
8 39.1 32 39.3 10 39.3 18 39.1 24 
        if v<min then min:=v
8 39.2 33 39.4 10 39.4 18 39.2 
    end
7 
    else
9 
    begin
6 
        if v>max then max:=v;
8 39.2 32 39.3 10 39.3 18 39.2 24 
        if u<min then min:=u
8 39.1 33 39.4 10 39.4 18 39.1 
    end;
7 24 
    write(max,min)
17 27 39.3 25 39.4 28 
end.
7 26 

Syntax analysis:
Data size: 83
main: 0 enter
header: 0 enter
(0) 0 -> 1 : header: 0 exit
header: 1 enter
program name: 0 enter
(39.0) 1 -> 2 : program name: 0 exit
(39.0) 1 -> 2 : header: 1 exit
(0) 0 -> 2 : main: 0 exit
main: 1 enter
(24) 2 -> 3 : main: 1 exit
main: 2 enter
description section: 0 enter
(1) 3 -> 4 : description section: 0 exit
description section: 1 enter
variable list: 0 enter
(39.1) 4 -> 5 : variable list: 0 exit
variable list: 1 enter
variable list loop: 0 enter
(25) 5 -> 6 : variable list loop: 0 exit
variable list loop: 1 enter
(39.2) 6 -> 7 : variable list loop: 1 exit
variable list loop: 2 enter
variable list loop: 0 enter
(25) 7 -> 8 : variable list loop: 0 exit
variable list loop: 1 enter
(39.3) 8 -> 9 : variable list loop: 1 exit
variable list loop: 2 enter
variable list loop: 0 enter
(25) 9 -> 10 : variable list loop: 0 exit
variable list loop: 1 enter
(39.4) 10 -> 11 : variable list loop: 1 exit
variable list loop: 2 enter
variable list loop: 0 enter
(29) 11 -> "Expected terminal symbol 25 , but found: 29 at 11" : variable list loop: 0 exit
(29) 11 -> 11 : variable list loop: 2 exit
(25) 9 -> 11 : variable list loop: 2 exit
(25) 7 -> 11 : variable list loop: 2 exit
(25) 5 -> 11 : variable list: 1 exit
(39.1) 4 -> 11 : description section: 1 exit
description section: 2 enter
(29) 11 -> 12 : description section: 2 exit
description section: 3 enter
variable type: 0 enter
(3) 12 -> "Expected terminal symbol 2 , but found: 3 at 12" : variable type: 0 exit
variable type: 0 enter
(3) 12 -> 13 : variable type: 0 exit
(3) 12 -> 13 : description section: 3 exit
description section: 4 enter
description section loop: 0 enter
(24) 13 -> 14 : description section loop: 0 exit
description section loop: 1 enter
variable list: 0 enter
(6) 14 -> "Expected identifier or literal, but found: 6 at 14" : variable list: 0 exit
(6) 14 -> "Expected identifier or literal, but found: 6 at 14" : description section loop: 1 exit
(24) 13 -> 13 : description section: 4 exit
(1) 3 -> 13 : main: 2 exit
main: 3 enter
(24) 13 -> 14 : main: 3 exit
main: 4 enter
operator section: 0 enter
(6) 14 -> 15 : operator section: 0 exit
operator section: 1 enter
operator list: 0 enter
operator: 0 enter
assignment: 0 enter
(16) 15 -> "Expected identifier or literal, but found: 16 at 15" : assignment: 0 exit
(16) 15 -> "Expected identifier or literal, but found: 16 at 15" : operator: 0 exit
operator: 0 enter
conditional: 0 enter
(16) 15 -> "Expected terminal symbol 8 , but found: 16 at 15" : conditional: 0 exit
conditional: 0 enter
(16) 15 -> "Expected terminal symbol 8 , but found: 16 at 15" : conditional: 0 exit
(16) 15 -> "Expected terminal symbol 8 , but found: 16 at 15" : operator: 0 exit
operator: 0 enter
loop: 0 enter
(16) 15 -> "Expected terminal symbol 12 , but found: 16 at 15" : loop: 0 exit
(16) 15 -> "Expected terminal symbol 12 , but found: 16 at 15" : operator: 0 exit
operator: 0 enter
input: 0 enter
(16) 15 -> 16 : input: 0 exit
input: 1 enter
(27) 16 -> 17 : input: 1 exit
input: 2 enter
variable list: 0 enter
(39.1) 17 -> 18 : variable list: 0 exit
variable list: 1 enter
variable list loop: 0 enter
(25) 18 -> 19 : variable list loop: 0 exit
variable list loop: 1 enter
(39.2) 19 -> 20 : variable list loop: 1 exit
variable list loop: 2 enter
variable list loop: 0 enter
(28) 20 -> "Expected terminal symbol 25 , but found: 28 at 20" : variable list loop: 0 exit
(28) 20 -> 20 : variable list loop: 2 exit
(25) 18 -> 20 : variable list: 1 exit
(39.1) 17 -> 20 : input: 2 exit
input: 3 enter
(28) 20 -> 21 : input: 3 exit
(16) 15 -> 21 : operator: 0 exit
(16) 15 -> 21 : operator list: 0 exit
operator list: 1 enter
operator list loop: 0 enter
(24) 21 -> 22 : operator list loop: 0 exit
operator list loop: 1 enter
operator: 0 enter
assignment: 0 enter
(39.3) 22 -> 23 : assignment: 0 exit
assignment: 1 enter
(18) 23 -> 24 : assignment: 1 exit
assignment: 2 enter
expression: 0 enter
(40.10) 24 -> "Expected terminal symbol 36 , but found: 40.10 at 24" : expression: 0 exit
expression: 0 enter
logic expression: 0 enter
(40.10) 24 -> "Expected terminal symbol 36 , but found: 40.10 at 24" : logic expression: 0 exit
logic expression: 0 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(40.10) 24 -> "Expected identifier or literal, but found: 40.10 at 24" : multiplication: 0 exit
multiplication: 0 enter
(40.10) 24 -> 25 : multiplication: 0 exit
(40.10) 24 -> 25 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(24) 25 -> "Expected terminal symbol 21 , but found: 24 at 25" : addition loop multi: 0 exit
addition loop multi: 0 enter
(24) 25 -> "Expected terminal symbol 21 , but found: 24 at 25" : addition loop multi: 0 exit
addition loop multi: 0 enter
(24) 25 -> "Expected terminal symbol 21 , but found: 24 at 25" : addition loop multi: 0 exit
(24) 25 -> 25 : addition: 1 exit
(40.10) 24 -> 25 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(24) 25 -> "Expected terminal symbol 19 , but found: 24 at 25" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(24) 25 -> "Expected terminal symbol 19 , but found: 24 at 25" : comparison loop plus: 0 exit
(24) 25 -> 25 : comparison: 1 exit
(40.10) 24 -> 25 : logic expression: 0 exit
logic expression: 1 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(24) 25 -> "Expected terminal symbol 30 , but found: 24 at 25" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 25 -> "Expected terminal symbol 31 , but found: 24 at 25" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 25 -> "Expected terminal symbol 33 , but found: 24 at 25" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 25 -> "Expected terminal symbol 34 , but found: 24 at 25" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 25 -> "Expected terminal symbol 32 , but found: 24 at 25" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 25 -> "Expected terminal symbol 35 , but found: 24 at 25" : comparison operator: 0 exit
(24) 25 -> "Expected terminal symbol 30 , but found: 24 at 25" : logic expression loop: 0 exit
(24) 25 -> 25 : logic expression: 1 exit
(40.10) 24 -> 25 : expression: 0 exit
expression: 1 enter
expression loop: 0 enter
logic operator: 0 enter
(24) 25 -> "Expected terminal symbol 38 , but found: 24 at 25" : logic operator: 0 exit
logic operator: 0 enter
(24) 25 -> "Expected terminal symbol 37 , but found: 24 at 25" : logic operator: 0 exit
(24) 25 -> "Expected terminal symbol 38 , but found: 24 at 25" : expression loop: 0 exit
(24) 25 -> 25 : expression: 1 exit
(40.10) 24 -> 25 : assignment: 2 exit
(39.3) 22 -> 25 : operator: 0 exit
(39.3) 22 -> 25 : operator list loop: 1 exit
operator list loop: 2 enter
operator list loop: 0 enter
(24) 25 -> 26 : operator list loop: 0 exit
operator list loop: 1 enter
operator: 0 enter
assignment: 0 enter
(39.4) 26 -> 27 : assignment: 0 exit
assignment: 1 enter
(18) 27 -> 28 : assignment: 1 exit
assignment: 2 enter
expression: 0 enter
(40.0) 28 -> "Expected terminal symbol 36 , but found: 40.0 at 28" : expression: 0 exit
expression: 0 enter
logic expression: 0 enter
(40.0) 28 -> "Expected terminal symbol 36 , but found: 40.0 at 28" : logic expression: 0 exit
logic expression: 0 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(40.0) 28 -> "Expected identifier or literal, but found: 40.0 at 28" : multiplication: 0 exit
multiplication: 0 enter
(40.0) 28 -> 29 : multiplication: 0 exit
(40.0) 28 -> 29 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(24) 29 -> "Expected terminal symbol 21 , but found: 24 at 29" : addition loop multi: 0 exit
addition loop multi: 0 enter
(24) 29 -> "Expected terminal symbol 21 , but found: 24 at 29" : addition loop multi: 0 exit
addition loop multi: 0 enter
(24) 29 -> "Expected terminal symbol 21 , but found: 24 at 29" : addition loop multi: 0 exit
(24) 29 -> 29 : addition: 1 exit
(40.0) 28 -> 29 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(24) 29 -> "Expected terminal symbol 19 , but found: 24 at 29" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(24) 29 -> "Expected terminal symbol 19 , but found: 24 at 29" : comparison loop plus: 0 exit
(24) 29 -> 29 : comparison: 1 exit
(40.0) 28 -> 29 : logic expression: 0 exit
logic expression: 1 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(24) 29 -> "Expected terminal symbol 30 , but found: 24 at 29" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 29 -> "Expected terminal symbol 31 , but found: 24 at 29" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 29 -> "Expected terminal symbol 33 , but found: 24 at 29" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 29 -> "Expected terminal symbol 34 , but found: 24 at 29" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 29 -> "Expected terminal symbol 32 , but found: 24 at 29" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 29 -> "Expected terminal symbol 35 , but found: 24 at 29" : comparison operator: 0 exit
(24) 29 -> "Expected terminal symbol 30 , but found: 24 at 29" : logic expression loop: 0 exit
(24) 29 -> 29 : logic expression: 1 exit
(40.0) 28 -> 29 : expression: 0 exit
expression: 1 enter
expression loop: 0 enter
logic operator: 0 enter
(24) 29 -> "Expected terminal symbol 38 , but found: 24 at 29" : logic operator: 0 exit
logic operator: 0 enter
(24) 29 -> "Expected terminal symbol 37 , but found: 24 at 29" : logic operator: 0 exit
(24) 29 -> "Expected terminal symbol 38 , but found: 24 at 29" : expression loop: 0 exit
(24) 29 -> 29 : expression: 1 exit
(40.0) 28 -> 29 : assignment: 2 exit
(39.4) 26 -> 29 : operator: 0 exit
(39.4) 26 -> 29 : operator list loop: 1 exit
operator list loop: 2 enter
operator list loop: 0 enter
(24) 29 -> 30 : operator list loop: 0 exit
operator list loop: 1 enter
operator: 0 enter
assignment: 0 enter
(8) 30 -> "Expected identifier or literal, but found: 8 at 30" : assignment: 0 exit
(8) 30 -> "Expected identifier or literal, but found: 8 at 30" : operator: 0 exit
operator: 0 enter
conditional: 0 enter
(8) 30 -> 31 : conditional: 0 exit
conditional: 1 enter
expression: 0 enter
(39.1) 31 -> "Expected terminal symbol 36 , but found: 39.1 at 31" : expression: 0 exit
expression: 0 enter
logic expression: 0 enter
(39.1) 31 -> "Expected terminal symbol 36 , but found: 39.1 at 31" : logic expression: 0 exit
logic expression: 0 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.1) 31 -> 32 : multiplication: 0 exit
(39.1) 31 -> 32 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(32) 32 -> "Expected terminal symbol 21 , but found: 32 at 32" : addition loop multi: 0 exit
addition loop multi: 0 enter
(32) 32 -> "Expected terminal symbol 21 , but found: 32 at 32" : addition loop multi: 0 exit
addition loop multi: 0 enter
(32) 32 -> "Expected terminal symbol 21 , but found: 32 at 32" : addition loop multi: 0 exit
(32) 32 -> 32 : addition: 1 exit
(39.1) 31 -> 32 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(32) 32 -> "Expected terminal symbol 19 , but found: 32 at 32" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(32) 32 -> "Expected terminal symbol 19 , but found: 32 at 32" : comparison loop plus: 0 exit
(32) 32 -> 32 : comparison: 1 exit
(39.1) 31 -> 32 : logic expression: 0 exit
logic expression: 1 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(32) 32 -> "Expected terminal symbol 30 , but found: 32 at 32" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 32 -> "Expected terminal symbol 31 , but found: 32 at 32" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 32 -> "Expected terminal symbol 33 , but found: 32 at 32" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 32 -> "Expected terminal symbol 34 , but found: 32 at 32" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 32 -> 33 : comparison operator: 0 exit
(32) 32 -> 33 : logic expression loop: 0 exit
logic expression loop: 1 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.2) 33 -> 34 : multiplication: 0 exit
(39.2) 33 -> 34 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(10) 34 -> "Expected terminal symbol 21 , but found: 10 at 34" : addition loop multi: 0 exit
addition loop multi: 0 enter
(10) 34 -> "Expected terminal symbol 21 , but found: 10 at 34" : addition loop multi: 0 exit
addition loop multi: 0 enter
(10) 34 -> "Expected terminal symbol 21 , but found: 10 at 34" : addition loop multi: 0 exit
(10) 34 -> 34 : addition: 1 exit
(39.2) 33 -> 34 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(10) 34 -> "Expected terminal symbol 19 , but found: 10 at 34" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(10) 34 -> "Expected terminal symbol 19 , but found: 10 at 34" : comparison loop plus: 0 exit
(10) 34 -> 34 : comparison: 1 exit
(39.2) 33 -> 34 : logic expression loop: 1 exit
logic expression loop: 2 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(10) 34 -> "Expected terminal symbol 30 , but found: 10 at 34" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 34 -> "Expected terminal symbol 31 , but found: 10 at 34" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 34 -> "Expected terminal symbol 33 , but found: 10 at 34" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 34 -> "Expected terminal symbol 34 , but found: 10 at 34" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 34 -> "Expected terminal symbol 32 , but found: 10 at 34" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 34 -> "Expected terminal symbol 35 , but found: 10 at 34" : comparison operator: 0 exit
(10) 34 -> "Expected terminal symbol 30 , but found: 10 at 34" : logic expression loop: 0 exit
(10) 34 -> 34 : logic expression loop: 2 exit
(32) 32 -> 34 : logic expression: 1 exit
(39.1) 31 -> 34 : expression: 0 exit
expression: 1 enter
expression loop: 0 enter
logic operator: 0 enter
(10) 34 -> "Expected terminal symbol 38 , but found: 10 at 34" : logic operator: 0 exit
logic operator: 0 enter
(10) 34 -> "Expected terminal symbol 37 , but found: 10 at 34" : logic operator: 0 exit
(10) 34 -> "Expected terminal symbol 38 , but found: 10 at 34" : expression loop: 0 exit
(10) 34 -> 34 : expression: 1 exit
(39.1) 31 -> 34 : conditional: 1 exit
conditional: 2 enter
(10) 34 -> 35 : conditional: 2 exit
conditional: 3 enter
operator section: 0 enter
(6) 35 -> 36 : operator section: 0 exit
operator section: 1 enter
operator list: 0 enter
operator: 0 enter
assignment: 0 enter
(8) 36 -> "Expected identifier or literal, but found: 8 at 36" : assignment: 0 exit
(8) 36 -> "Expected identifier or literal, but found: 8 at 36" : operator: 0 exit
operator: 0 enter
conditional: 0 enter
(8) 36 -> 37 : conditional: 0 exit
conditional: 1 enter
expression: 0 enter
(39.1) 37 -> "Expected terminal symbol 36 , but found: 39.1 at 37" : expression: 0 exit
expression: 0 enter
logic expression: 0 enter
(39.1) 37 -> "Expected terminal symbol 36 , but found: 39.1 at 37" : logic expression: 0 exit
logic expression: 0 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.1) 37 -> 38 : multiplication: 0 exit
(39.1) 37 -> 38 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(32) 38 -> "Expected terminal symbol 21 , but found: 32 at 38" : addition loop multi: 0 exit
addition loop multi: 0 enter
(32) 38 -> "Expected terminal symbol 21 , but found: 32 at 38" : addition loop multi: 0 exit
addition loop multi: 0 enter
(32) 38 -> "Expected terminal symbol 21 , but found: 32 at 38" : addition loop multi: 0 exit
(32) 38 -> 38 : addition: 1 exit
(39.1) 37 -> 38 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(32) 38 -> "Expected terminal symbol 19 , but found: 32 at 38" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(32) 38 -> "Expected terminal symbol 19 , but found: 32 at 38" : comparison loop plus: 0 exit
(32) 38 -> 38 : comparison: 1 exit
(39.1) 37 -> 38 : logic expression: 0 exit
logic expression: 1 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(32) 38 -> "Expected terminal symbol 30 , but found: 32 at 38" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 38 -> "Expected terminal symbol 31 , but found: 32 at 38" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 38 -> "Expected terminal symbol 33 , but found: 32 at 38" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 38 -> "Expected terminal symbol 34 , but found: 32 at 38" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 38 -> 39 : comparison operator: 0 exit
(32) 38 -> 39 : logic expression loop: 0 exit
logic expression loop: 1 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.3) 39 -> 40 : multiplication: 0 exit
(39.3) 39 -> 40 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(10) 40 -> "Expected terminal symbol 21 , but found: 10 at 40" : addition loop multi: 0 exit
addition loop multi: 0 enter
(10) 40 -> "Expected terminal symbol 21 , but found: 10 at 40" : addition loop multi: 0 exit
addition loop multi: 0 enter
(10) 40 -> "Expected terminal symbol 21 , but found: 10 at 40" : addition loop multi: 0 exit
(10) 40 -> 40 : addition: 1 exit
(39.3) 39 -> 40 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(10) 40 -> "Expected terminal symbol 19 , but found: 10 at 40" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(10) 40 -> "Expected terminal symbol 19 , but found: 10 at 40" : comparison loop plus: 0 exit
(10) 40 -> 40 : comparison: 1 exit
(39.3) 39 -> 40 : logic expression loop: 1 exit
logic expression loop: 2 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(10) 40 -> "Expected terminal symbol 30 , but found: 10 at 40" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 40 -> "Expected terminal symbol 31 , but found: 10 at 40" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 40 -> "Expected terminal symbol 33 , but found: 10 at 40" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 40 -> "Expected terminal symbol 34 , but found: 10 at 40" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 40 -> "Expected terminal symbol 32 , but found: 10 at 40" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 40 -> "Expected terminal symbol 35 , but found: 10 at 40" : comparison operator: 0 exit
(10) 40 -> "Expected terminal symbol 30 , but found: 10 at 40" : logic expression loop: 0 exit
(10) 40 -> 40 : logic expression loop: 2 exit
(32) 38 -> 40 : logic expression: 1 exit
(39.1) 37 -> 40 : expression: 0 exit
expression: 1 enter
expression loop: 0 enter
logic operator: 0 enter
(10) 40 -> "Expected terminal symbol 38 , but found: 10 at 40" : logic operator: 0 exit
logic operator: 0 enter
(10) 40 -> "Expected terminal symbol 37 , but found: 10 at 40" : logic operator: 0 exit
(10) 40 -> "Expected terminal symbol 38 , but found: 10 at 40" : expression loop: 0 exit
(10) 40 -> 40 : expression: 1 exit
(39.1) 37 -> 40 : conditional: 1 exit
conditional: 2 enter
(10) 40 -> 41 : conditional: 2 exit
conditional: 3 enter
operator section: 0 enter
(39.3) 41 -> "Expected terminal symbol 6 , but found: 39.3 at 41" : operator section: 0 exit
operator section: 0 enter
operator: 0 enter
assignment: 0 enter
(39.3) 41 -> 42 : assignment: 0 exit
assignment: 1 enter
(18) 42 -> 43 : assignment: 1 exit
assignment: 2 enter
expression: 0 enter
(39.1) 43 -> "Expected terminal symbol 36 , but found: 39.1 at 43" : expression: 0 exit
expression: 0 enter
logic expression: 0 enter
(39.1) 43 -> "Expected terminal symbol 36 , but found: 39.1 at 43" : logic expression: 0 exit
logic expression: 0 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.1) 43 -> 44 : multiplication: 0 exit
(39.1) 43 -> 44 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(24) 44 -> "Expected terminal symbol 21 , but found: 24 at 44" : addition loop multi: 0 exit
addition loop multi: 0 enter
(24) 44 -> "Expected terminal symbol 21 , but found: 24 at 44" : addition loop multi: 0 exit
addition loop multi: 0 enter
(24) 44 -> "Expected terminal symbol 21 , but found: 24 at 44" : addition loop multi: 0 exit
(24) 44 -> 44 : addition: 1 exit
(39.1) 43 -> 44 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(24) 44 -> "Expected terminal symbol 19 , but found: 24 at 44" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(24) 44 -> "Expected terminal symbol 19 , but found: 24 at 44" : comparison loop plus: 0 exit
(24) 44 -> 44 : comparison: 1 exit
(39.1) 43 -> 44 : logic expression: 0 exit
logic expression: 1 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(24) 44 -> "Expected terminal symbol 30 , but found: 24 at 44" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 44 -> "Expected terminal symbol 31 , but found: 24 at 44" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 44 -> "Expected terminal symbol 33 , but found: 24 at 44" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 44 -> "Expected terminal symbol 34 , but found: 24 at 44" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 44 -> "Expected terminal symbol 32 , but found: 24 at 44" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 44 -> "Expected terminal symbol 35 , but found: 24 at 44" : comparison operator: 0 exit
(24) 44 -> "Expected terminal symbol 30 , but found: 24 at 44" : logic expression loop: 0 exit
(24) 44 -> 44 : logic expression: 1 exit
(39.1) 43 -> 44 : expression: 0 exit
expression: 1 enter
expression loop: 0 enter
logic operator: 0 enter
(24) 44 -> "Expected terminal symbol 38 , but found: 24 at 44" : logic operator: 0 exit
logic operator: 0 enter
(24) 44 -> "Expected terminal symbol 37 , but found: 24 at 44" : logic operator: 0 exit
(24) 44 -> "Expected terminal symbol 38 , but found: 24 at 44" : expression loop: 0 exit
(24) 44 -> 44 : expression: 1 exit
(39.1) 43 -> 44 : assignment: 2 exit
(39.3) 41 -> 44 : operator: 0 exit
(39.3) 41 -> 44 : operator section: 0 exit
(39.3) 41 -> 44 : conditional: 3 exit
conditional: 4 enter
(24) 44 -> "Expected terminal symbol 9 , but found: 24 at 44" : conditional: 4 exit
conditional: 0 enter
(8) 36 -> 37 : conditional: 0 exit
conditional: 1 enter
expression: 0 enter
(39.1) 37 -> "Expected terminal symbol 36 , but found: 39.1 at 37" : expression: 0 exit
expression: 0 enter
logic expression: 0 enter
(39.1) 37 -> "Expected terminal symbol 36 , but found: 39.1 at 37" : logic expression: 0 exit
logic expression: 0 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.1) 37 -> 38 : multiplication: 0 exit
(39.1) 37 -> 38 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(32) 38 -> "Expected terminal symbol 21 , but found: 32 at 38" : addition loop multi: 0 exit
addition loop multi: 0 enter
(32) 38 -> "Expected terminal symbol 21 , but found: 32 at 38" : addition loop multi: 0 exit
addition loop multi: 0 enter
(32) 38 -> "Expected terminal symbol 21 , but found: 32 at 38" : addition loop multi: 0 exit
(32) 38 -> 38 : addition: 1 exit
(39.1) 37 -> 38 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(32) 38 -> "Expected terminal symbol 19 , but found: 32 at 38" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(32) 38 -> "Expected terminal symbol 19 , but found: 32 at 38" : comparison loop plus: 0 exit
(32) 38 -> 38 : comparison: 1 exit
(39.1) 37 -> 38 : logic expression: 0 exit
logic expression: 1 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(32) 38 -> "Expected terminal symbol 30 , but found: 32 at 38" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 38 -> "Expected terminal symbol 31 , but found: 32 at 38" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 38 -> "Expected terminal symbol 33 , but found: 32 at 38" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 38 -> "Expected terminal symbol 34 , but found: 32 at 38" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 38 -> 39 : comparison operator: 0 exit
(32) 38 -> 39 : logic expression loop: 0 exit
logic expression loop: 1 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.3) 39 -> 40 : multiplication: 0 exit
(39.3) 39 -> 40 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(10) 40 -> "Expected terminal symbol 21 , but found: 10 at 40" : addition loop multi: 0 exit
addition loop multi: 0 enter
(10) 40 -> "Expected terminal symbol 21 , but found: 10 at 40" : addition loop multi: 0 exit
addition loop multi: 0 enter
(10) 40 -> "Expected terminal symbol 21 , but found: 10 at 40" : addition loop multi: 0 exit
(10) 40 -> 40 : addition: 1 exit
(39.3) 39 -> 40 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(10) 40 -> "Expected terminal symbol 19 , but found: 10 at 40" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(10) 40 -> "Expected terminal symbol 19 , but found: 10 at 40" : comparison loop plus: 0 exit
(10) 40 -> 40 : comparison: 1 exit
(39.3) 39 -> 40 : logic expression loop: 1 exit
logic expression loop: 2 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(10) 40 -> "Expected terminal symbol 30 , but found: 10 at 40" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 40 -> "Expected terminal symbol 31 , but found: 10 at 40" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 40 -> "Expected terminal symbol 33 , but found: 10 at 40" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 40 -> "Expected terminal symbol 34 , but found: 10 at 40" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 40 -> "Expected terminal symbol 32 , but found: 10 at 40" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 40 -> "Expected terminal symbol 35 , but found: 10 at 40" : comparison operator: 0 exit
(10) 40 -> "Expected terminal symbol 30 , but found: 10 at 40" : logic expression loop: 0 exit
(10) 40 -> 40 : logic expression loop: 2 exit
(32) 38 -> 40 : logic expression: 1 exit
(39.1) 37 -> 40 : expression: 0 exit
expression: 1 enter
expression loop: 0 enter
logic operator: 0 enter
(10) 40 -> "Expected terminal symbol 38 , but found: 10 at 40" : logic operator: 0 exit
logic operator: 0 enter
(10) 40 -> "Expected terminal symbol 37 , but found: 10 at 40" : logic operator: 0 exit
(10) 40 -> "Expected terminal symbol 38 , but found: 10 at 40" : expression loop: 0 exit
(10) 40 -> 40 : expression: 1 exit
(39.1) 37 -> 40 : conditional: 1 exit
conditional: 2 enter
(10) 40 -> 41 : conditional: 2 exit
conditional: 3 enter
operator section: 0 enter
(39.3) 41 -> "Expected terminal symbol 6 , but found: 39.3 at 41" : operator section: 0 exit
operator section: 0 enter
operator: 0 enter
assignment: 0 enter
(39.3) 41 -> 42 : assignment: 0 exit
assignment: 1 enter
(18) 42 -> 43 : assignment: 1 exit
assignment: 2 enter
expression: 0 enter
(39.1) 43 -> "Expected terminal symbol 36 , but found: 39.1 at 43" : expression: 0 exit
expression: 0 enter
logic expression: 0 enter
(39.1) 43 -> "Expected terminal symbol 36 , but found: 39.1 at 43" : logic expression: 0 exit
logic expression: 0 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.1) 43 -> 44 : multiplication: 0 exit
(39.1) 43 -> 44 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(24) 44 -> "Expected terminal symbol 21 , but found: 24 at 44" : addition loop multi: 0 exit
addition loop multi: 0 enter
(24) 44 -> "Expected terminal symbol 21 , but found: 24 at 44" : addition loop multi: 0 exit
addition loop multi: 0 enter
(24) 44 -> "Expected terminal symbol 21 , but found: 24 at 44" : addition loop multi: 0 exit
(24) 44 -> 44 : addition: 1 exit
(39.1) 43 -> 44 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(24) 44 -> "Expected terminal symbol 19 , but found: 24 at 44" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(24) 44 -> "Expected terminal symbol 19 , but found: 24 at 44" : comparison loop plus: 0 exit
(24) 44 -> 44 : comparison: 1 exit
(39.1) 43 -> 44 : logic expression: 0 exit
logic expression: 1 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(24) 44 -> "Expected terminal symbol 30 , but found: 24 at 44" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 44 -> "Expected terminal symbol 31 , but found: 24 at 44" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 44 -> "Expected terminal symbol 33 , but found: 24 at 44" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 44 -> "Expected terminal symbol 34 , but found: 24 at 44" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 44 -> "Expected terminal symbol 32 , but found: 24 at 44" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 44 -> "Expected terminal symbol 35 , but found: 24 at 44" : comparison operator: 0 exit
(24) 44 -> "Expected terminal symbol 30 , but found: 24 at 44" : logic expression loop: 0 exit
(24) 44 -> 44 : logic expression: 1 exit
(39.1) 43 -> 44 : expression: 0 exit
expression: 1 enter
expression loop: 0 enter
logic operator: 0 enter
(24) 44 -> "Expected terminal symbol 38 , but found: 24 at 44" : logic operator: 0 exit
logic operator: 0 enter
(24) 44 -> "Expected terminal symbol 37 , but found: 24 at 44" : logic operator: 0 exit
(24) 44 -> "Expected terminal symbol 38 , but found: 24 at 44" : expression loop: 0 exit
(24) 44 -> 44 : expression: 1 exit
(39.1) 43 -> 44 : assignment: 2 exit
(39.3) 41 -> 44 : operator: 0 exit
(39.3) 41 -> 44 : operator section: 0 exit
(39.3) 41 -> 44 : conditional: 3 exit
(8) 36 -> 44 : operator: 0 exit
(8) 36 -> 44 : operator list: 0 exit
operator list: 1 enter
operator list loop: 0 enter
(24) 44 -> 45 : operator list loop: 0 exit
operator list loop: 1 enter
operator: 0 enter
assignment: 0 enter
(8) 45 -> "Expected identifier or literal, but found: 8 at 45" : assignment: 0 exit
(8) 45 -> "Expected identifier or literal, but found: 8 at 45" : operator: 0 exit
operator: 0 enter
conditional: 0 enter
(8) 45 -> 46 : conditional: 0 exit
conditional: 1 enter
expression: 0 enter
(39.2) 46 -> "Expected terminal symbol 36 , but found: 39.2 at 46" : expression: 0 exit
expression: 0 enter
logic expression: 0 enter
(39.2) 46 -> "Expected terminal symbol 36 , but found: 39.2 at 46" : logic expression: 0 exit
logic expression: 0 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.2) 46 -> 47 : multiplication: 0 exit
(39.2) 46 -> 47 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(33) 47 -> "Expected terminal symbol 21 , but found: 33 at 47" : addition loop multi: 0 exit
addition loop multi: 0 enter
(33) 47 -> "Expected terminal symbol 21 , but found: 33 at 47" : addition loop multi: 0 exit
addition loop multi: 0 enter
(33) 47 -> "Expected terminal symbol 21 , but found: 33 at 47" : addition loop multi: 0 exit
(33) 47 -> 47 : addition: 1 exit
(39.2) 46 -> 47 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(33) 47 -> "Expected terminal symbol 19 , but found: 33 at 47" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(33) 47 -> "Expected terminal symbol 19 , but found: 33 at 47" : comparison loop plus: 0 exit
(33) 47 -> 47 : comparison: 1 exit
(39.2) 46 -> 47 : logic expression: 0 exit
logic expression: 1 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(33) 47 -> "Expected terminal symbol 30 , but found: 33 at 47" : comparison operator: 0 exit
comparison operator: 0 enter
(33) 47 -> "Expected terminal symbol 31 , but found: 33 at 47" : comparison operator: 0 exit
comparison operator: 0 enter
(33) 47 -> 48 : comparison operator: 0 exit
(33) 47 -> 48 : logic expression loop: 0 exit
logic expression loop: 1 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.4) 48 -> 49 : multiplication: 0 exit
(39.4) 48 -> 49 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(10) 49 -> "Expected terminal symbol 21 , but found: 10 at 49" : addition loop multi: 0 exit
addition loop multi: 0 enter
(10) 49 -> "Expected terminal symbol 21 , but found: 10 at 49" : addition loop multi: 0 exit
addition loop multi: 0 enter
(10) 49 -> "Expected terminal symbol 21 , but found: 10 at 49" : addition loop multi: 0 exit
(10) 49 -> 49 : addition: 1 exit
(39.4) 48 -> 49 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(10) 49 -> "Expected terminal symbol 19 , but found: 10 at 49" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(10) 49 -> "Expected terminal symbol 19 , but found: 10 at 49" : comparison loop plus: 0 exit
(10) 49 -> 49 : comparison: 1 exit
(39.4) 48 -> 49 : logic expression loop: 1 exit
logic expression loop: 2 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(10) 49 -> "Expected terminal symbol 30 , but found: 10 at 49" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 49 -> "Expected terminal symbol 31 , but found: 10 at 49" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 49 -> "Expected terminal symbol 33 , but found: 10 at 49" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 49 -> "Expected terminal symbol 34 , but found: 10 at 49" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 49 -> "Expected terminal symbol 32 , but found: 10 at 49" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 49 -> "Expected terminal symbol 35 , but found: 10 at 49" : comparison operator: 0 exit
(10) 49 -> "Expected terminal symbol 30 , but found: 10 at 49" : logic expression loop: 0 exit
(10) 49 -> 49 : logic expression loop: 2 exit
(33) 47 -> 49 : logic expression: 1 exit
(39.2) 46 -> 49 : expression: 0 exit
expression: 1 enter
expression loop: 0 enter
logic operator: 0 enter
(10) 49 -> "Expected terminal symbol 38 , but found: 10 at 49" : logic operator: 0 exit
logic operator: 0 enter
(10) 49 -> "Expected terminal symbol 37 , but found: 10 at 49" : logic operator: 0 exit
(10) 49 -> "Expected terminal symbol 38 , but found: 10 at 49" : expression loop: 0 exit
(10) 49 -> 49 : expression: 1 exit
(39.2) 46 -> 49 : conditional: 1 exit
conditional: 2 enter
(10) 49 -> 50 : conditional: 2 exit
conditional: 3 enter
operator section: 0 enter
(39.4) 50 -> "Expected terminal symbol 6 , but found: 39.4 at 50" : operator section: 0 exit
operator section: 0 enter
operator: 0 enter
assignment: 0 enter
(39.4) 50 -> 51 : assignment: 0 exit
assignment: 1 enter
(18) 51 -> 52 : assignment: 1 exit
assignment: 2 enter
expression: 0 enter
(39.2) 52 -> "Expected terminal symbol 36 , but found: 39.2 at 52" : expression: 0 exit
expression: 0 enter
logic expression: 0 enter
(39.2) 52 -> "Expected terminal symbol 36 , but found: 39.2 at 52" : logic expression: 0 exit
logic expression: 0 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.2) 52 -> 53 : multiplication: 0 exit
(39.2) 52 -> 53 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(7) 53 -> "Expected terminal symbol 21 , but found: 7 at 53" : addition loop multi: 0 exit
addition loop multi: 0 enter
(7) 53 -> "Expected terminal symbol 21 , but found: 7 at 53" : addition loop multi: 0 exit
addition loop multi: 0 enter
(7) 53 -> "Expected terminal symbol 21 , but found: 7 at 53" : addition loop multi: 0 exit
(7) 53 -> 53 : addition: 1 exit
(39.2) 52 -> 53 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(7) 53 -> "Expected terminal symbol 19 , but found: 7 at 53" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(7) 53 -> "Expected terminal symbol 19 , but found: 7 at 53" : comparison loop plus: 0 exit
(7) 53 -> 53 : comparison: 1 exit
(39.2) 52 -> 53 : logic expression: 0 exit
logic expression: 1 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(7) 53 -> "Expected terminal symbol 30 , but found: 7 at 53" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 53 -> "Expected terminal symbol 31 , but found: 7 at 53" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 53 -> "Expected terminal symbol 33 , but found: 7 at 53" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 53 -> "Expected terminal symbol 34 , but found: 7 at 53" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 53 -> "Expected terminal symbol 32 , but found: 7 at 53" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 53 -> "Expected terminal symbol 35 , but found: 7 at 53" : comparison operator: 0 exit
(7) 53 -> "Expected terminal symbol 30 , but found: 7 at 53" : logic expression loop: 0 exit
(7) 53 -> 53 : logic expression: 1 exit
(39.2) 52 -> 53 : expression: 0 exit
expression: 1 enter
expression loop: 0 enter
logic operator: 0 enter
(7) 53 -> "Expected terminal symbol 38 , but found: 7 at 53" : logic operator: 0 exit
logic operator: 0 enter
(7) 53 -> "Expected terminal symbol 37 , but found: 7 at 53" : logic operator: 0 exit
(7) 53 -> "Expected terminal symbol 38 , but found: 7 at 53" : expression loop: 0 exit
(7) 53 -> 53 : expression: 1 exit
(39.2) 52 -> 53 : assignment: 2 exit
(39.4) 50 -> 53 : operator: 0 exit
(39.4) 50 -> 53 : operator section: 0 exit
(39.4) 50 -> 53 : conditional: 3 exit
conditional: 4 enter
(7) 53 -> "Expected terminal symbol 9 , but found: 7 at 53" : conditional: 4 exit
conditional: 0 enter
(8) 45 -> 46 : conditional: 0 exit
conditional: 1 enter
expression: 0 enter
(39.2) 46 -> "Expected terminal symbol 36 , but found: 39.2 at 46" : expression: 0 exit
expression: 0 enter
logic expression: 0 enter
(39.2) 46 -> "Expected terminal symbol 36 , but found: 39.2 at 46" : logic expression: 0 exit
logic expression: 0 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.2) 46 -> 47 : multiplication: 0 exit
(39.2) 46 -> 47 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(33) 47 -> "Expected terminal symbol 21 , but found: 33 at 47" : addition loop multi: 0 exit
addition loop multi: 0 enter
(33) 47 -> "Expected terminal symbol 21 , but found: 33 at 47" : addition loop multi: 0 exit
addition loop multi: 0 enter
(33) 47 -> "Expected terminal symbol 21 , but found: 33 at 47" : addition loop multi: 0 exit
(33) 47 -> 47 : addition: 1 exit
(39.2) 46 -> 47 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(33) 47 -> "Expected terminal symbol 19 , but found: 33 at 47" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(33) 47 -> "Expected terminal symbol 19 , but found: 33 at 47" : comparison loop plus: 0 exit
(33) 47 -> 47 : comparison: 1 exit
(39.2) 46 -> 47 : logic expression: 0 exit
logic expression: 1 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(33) 47 -> "Expected terminal symbol 30 , but found: 33 at 47" : comparison operator: 0 exit
comparison operator: 0 enter
(33) 47 -> "Expected terminal symbol 31 , but found: 33 at 47" : comparison operator: 0 exit
comparison operator: 0 enter
(33) 47 -> 48 : comparison operator: 0 exit
(33) 47 -> 48 : logic expression loop: 0 exit
logic expression loop: 1 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.4) 48 -> 49 : multiplication: 0 exit
(39.4) 48 -> 49 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(10) 49 -> "Expected terminal symbol 21 , but found: 10 at 49" : addition loop multi: 0 exit
addition loop multi: 0 enter
(10) 49 -> "Expected terminal symbol 21 , but found: 10 at 49" : addition loop multi: 0 exit
addition loop multi: 0 enter
(10) 49 -> "Expected terminal symbol 21 , but found: 10 at 49" : addition loop multi: 0 exit
(10) 49 -> 49 : addition: 1 exit
(39.4) 48 -> 49 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(10) 49 -> "Expected terminal symbol 19 , but found: 10 at 49" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(10) 49 -> "Expected terminal symbol 19 , but found: 10 at 49" : comparison loop plus: 0 exit
(10) 49 -> 49 : comparison: 1 exit
(39.4) 48 -> 49 : logic expression loop: 1 exit
logic expression loop: 2 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(10) 49 -> "Expected terminal symbol 30 , but found: 10 at 49" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 49 -> "Expected terminal symbol 31 , but found: 10 at 49" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 49 -> "Expected terminal symbol 33 , but found: 10 at 49" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 49 -> "Expected terminal symbol 34 , but found: 10 at 49" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 49 -> "Expected terminal symbol 32 , but found: 10 at 49" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 49 -> "Expected terminal symbol 35 , but found: 10 at 49" : comparison operator: 0 exit
(10) 49 -> "Expected terminal symbol 30 , but found: 10 at 49" : logic expression loop: 0 exit
(10) 49 -> 49 : logic expression loop: 2 exit
(33) 47 -> 49 : logic expression: 1 exit
(39.2) 46 -> 49 : expression: 0 exit
expression: 1 enter
expression loop: 0 enter
logic operator: 0 enter
(10) 49 -> "Expected terminal symbol 38 , but found: 10 at 49" : logic operator: 0 exit
logic operator: 0 enter
(10) 49 -> "Expected terminal symbol 37 , but found: 10 at 49" : logic operator: 0 exit
(10) 49 -> "Expected terminal symbol 38 , but found: 10 at 49" : expression loop: 0 exit
(10) 49 -> 49 : expression: 1 exit
(39.2) 46 -> 49 : conditional: 1 exit
conditional: 2 enter
(10) 49 -> 50 : conditional: 2 exit
conditional: 3 enter
operator section: 0 enter
(39.4) 50 -> "Expected terminal symbol 6 , but found: 39.4 at 50" : operator section: 0 exit
operator section: 0 enter
operator: 0 enter
assignment: 0 enter
(39.4) 50 -> 51 : assignment: 0 exit
assignment: 1 enter
(18) 51 -> 52 : assignment: 1 exit
assignment: 2 enter
expression: 0 enter
(39.2) 52 -> "Expected terminal symbol 36 , but found: 39.2 at 52" : expression: 0 exit
expression: 0 enter
logic expression: 0 enter
(39.2) 52 -> "Expected terminal symbol 36 , but found: 39.2 at 52" : logic expression: 0 exit
logic expression: 0 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.2) 52 -> 53 : multiplication: 0 exit
(39.2) 52 -> 53 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(7) 53 -> "Expected terminal symbol 21 , but found: 7 at 53" : addition loop multi: 0 exit
addition loop multi: 0 enter
(7) 53 -> "Expected terminal symbol 21 , but found: 7 at 53" : addition loop multi: 0 exit
addition loop multi: 0 enter
(7) 53 -> "Expected terminal symbol 21 , but found: 7 at 53" : addition loop multi: 0 exit
(7) 53 -> 53 : addition: 1 exit
(39.2) 52 -> 53 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(7) 53 -> "Expected terminal symbol 19 , but found: 7 at 53" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(7) 53 -> "Expected terminal symbol 19 , but found: 7 at 53" : comparison loop plus: 0 exit
(7) 53 -> 53 : comparison: 1 exit
(39.2) 52 -> 53 : logic expression: 0 exit
logic expression: 1 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(7) 53 -> "Expected terminal symbol 30 , but found: 7 at 53" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 53 -> "Expected terminal symbol 31 , but found: 7 at 53" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 53 -> "Expected terminal symbol 33 , but found: 7 at 53" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 53 -> "Expected terminal symbol 34 , but found: 7 at 53" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 53 -> "Expected terminal symbol 32 , but found: 7 at 53" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 53 -> "Expected terminal symbol 35 , but found: 7 at 53" : comparison operator: 0 exit
(7) 53 -> "Expected terminal symbol 30 , but found: 7 at 53" : logic expression loop: 0 exit
(7) 53 -> 53 : logic expression: 1 exit
(39.2) 52 -> 53 : expression: 0 exit
expression: 1 enter
expression loop: 0 enter
logic operator: 0 enter
(7) 53 -> "Expected terminal symbol 38 , but found: 7 at 53" : logic operator: 0 exit
logic operator: 0 enter
(7) 53 -> "Expected terminal symbol 37 , but found: 7 at 53" : logic operator: 0 exit
(7) 53 -> "Expected terminal symbol 38 , but found: 7 at 53" : expression loop: 0 exit
(7) 53 -> 53 : expression: 1 exit
(39.2) 52 -> 53 : assignment: 2 exit
(39.4) 50 -> 53 : operator: 0 exit
(39.4) 50 -> 53 : operator section: 0 exit
(39.4) 50 -> 53 : conditional: 3 exit
(8) 45 -> 53 : operator: 0 exit
(8) 45 -> 53 : operator list loop: 1 exit
operator list loop: 2 enter
operator list loop: 0 enter
(7) 53 -> "Expected terminal symbol 24 , but found: 7 at 53" : operator list loop: 0 exit
(7) 53 -> 53 : operator list loop: 2 exit
(24) 44 -> 53 : operator list: 1 exit
(8) 36 -> 53 : operator section: 1 exit
operator section: 2 enter
(7) 53 -> 54 : operator section: 2 exit
(6) 35 -> 54 : conditional: 3 exit
conditional: 4 enter
(9) 54 -> 55 : conditional: 4 exit
conditional: 5 enter
operator section: 0 enter
(6) 55 -> 56 : operator section: 0 exit
operator section: 1 enter
operator list: 0 enter
operator: 0 enter
assignment: 0 enter
(8) 56 -> "Expected identifier or literal, but found: 8 at 56" : assignment: 0 exit
(8) 56 -> "Expected identifier or literal, but found: 8 at 56" : operator: 0 exit
operator: 0 enter
conditional: 0 enter
(8) 56 -> 57 : conditional: 0 exit
conditional: 1 enter
expression: 0 enter
(39.2) 57 -> "Expected terminal symbol 36 , but found: 39.2 at 57" : expression: 0 exit
expression: 0 enter
logic expression: 0 enter
(39.2) 57 -> "Expected terminal symbol 36 , but found: 39.2 at 57" : logic expression: 0 exit
logic expression: 0 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.2) 57 -> 58 : multiplication: 0 exit
(39.2) 57 -> 58 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(32) 58 -> "Expected terminal symbol 21 , but found: 32 at 58" : addition loop multi: 0 exit
addition loop multi: 0 enter
(32) 58 -> "Expected terminal symbol 21 , but found: 32 at 58" : addition loop multi: 0 exit
addition loop multi: 0 enter
(32) 58 -> "Expected terminal symbol 21 , but found: 32 at 58" : addition loop multi: 0 exit
(32) 58 -> 58 : addition: 1 exit
(39.2) 57 -> 58 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(32) 58 -> "Expected terminal symbol 19 , but found: 32 at 58" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(32) 58 -> "Expected terminal symbol 19 , but found: 32 at 58" : comparison loop plus: 0 exit
(32) 58 -> 58 : comparison: 1 exit
(39.2) 57 -> 58 : logic expression: 0 exit
logic expression: 1 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(32) 58 -> "Expected terminal symbol 30 , but found: 32 at 58" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 58 -> "Expected terminal symbol 31 , but found: 32 at 58" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 58 -> "Expected terminal symbol 33 , but found: 32 at 58" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 58 -> "Expected terminal symbol 34 , but found: 32 at 58" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 58 -> 59 : comparison operator: 0 exit
(32) 58 -> 59 : logic expression loop: 0 exit
logic expression loop: 1 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.3) 59 -> 60 : multiplication: 0 exit
(39.3) 59 -> 60 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(10) 60 -> "Expected terminal symbol 21 , but found: 10 at 60" : addition loop multi: 0 exit
addition loop multi: 0 enter
(10) 60 -> "Expected terminal symbol 21 , but found: 10 at 60" : addition loop multi: 0 exit
addition loop multi: 0 enter
(10) 60 -> "Expected terminal symbol 21 , but found: 10 at 60" : addition loop multi: 0 exit
(10) 60 -> 60 : addition: 1 exit
(39.3) 59 -> 60 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(10) 60 -> "Expected terminal symbol 19 , but found: 10 at 60" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(10) 60 -> "Expected terminal symbol 19 , but found: 10 at 60" : comparison loop plus: 0 exit
(10) 60 -> 60 : comparison: 1 exit
(39.3) 59 -> 60 : logic expression loop: 1 exit
logic expression loop: 2 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(10) 60 -> "Expected terminal symbol 30 , but found: 10 at 60" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 60 -> "Expected terminal symbol 31 , but found: 10 at 60" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 60 -> "Expected terminal symbol 33 , but found: 10 at 60" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 60 -> "Expected terminal symbol 34 , but found: 10 at 60" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 60 -> "Expected terminal symbol 32 , but found: 10 at 60" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 60 -> "Expected terminal symbol 35 , but found: 10 at 60" : comparison operator: 0 exit
(10) 60 -> "Expected terminal symbol 30 , but found: 10 at 60" : logic expression loop: 0 exit
(10) 60 -> 60 : logic expression loop: 2 exit
(32) 58 -> 60 : logic expression: 1 exit
(39.2) 57 -> 60 : expression: 0 exit
expression: 1 enter
expression loop: 0 enter
logic operator: 0 enter
(10) 60 -> "Expected terminal symbol 38 , but found: 10 at 60" : logic operator: 0 exit
logic operator: 0 enter
(10) 60 -> "Expected terminal symbol 37 , but found: 10 at 60" : logic operator: 0 exit
(10) 60 -> "Expected terminal symbol 38 , but found: 10 at 60" : expression loop: 0 exit
(10) 60 -> 60 : expression: 1 exit
(39.2) 57 -> 60 : conditional: 1 exit
conditional: 2 enter
(10) 60 -> 61 : conditional: 2 exit
conditional: 3 enter
operator section: 0 enter
(39.3) 61 -> "Expected terminal symbol 6 , but found: 39.3 at 61" : operator section: 0 exit
operator section: 0 enter
operator: 0 enter
assignment: 0 enter
(39.3) 61 -> 62 : assignment: 0 exit
assignment: 1 enter
(18) 62 -> 63 : assignment: 1 exit
assignment: 2 enter
expression: 0 enter
(39.2) 63 -> "Expected terminal symbol 36 , but found: 39.2 at 63" : expression: 0 exit
expression: 0 enter
logic expression: 0 enter
(39.2) 63 -> "Expected terminal symbol 36 , but found: 39.2 at 63" : logic expression: 0 exit
logic expression: 0 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.2) 63 -> 64 : multiplication: 0 exit
(39.2) 63 -> 64 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(24) 64 -> "Expected terminal symbol 21 , but found: 24 at 64" : addition loop multi: 0 exit
addition loop multi: 0 enter
(24) 64 -> "Expected terminal symbol 21 , but found: 24 at 64" : addition loop multi: 0 exit
addition loop multi: 0 enter
(24) 64 -> "Expected terminal symbol 21 , but found: 24 at 64" : addition loop multi: 0 exit
(24) 64 -> 64 : addition: 1 exit
(39.2) 63 -> 64 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(24) 64 -> "Expected terminal symbol 19 , but found: 24 at 64" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(24) 64 -> "Expected terminal symbol 19 , but found: 24 at 64" : comparison loop plus: 0 exit
(24) 64 -> 64 : comparison: 1 exit
(39.2) 63 -> 64 : logic expression: 0 exit
logic expression: 1 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(24) 64 -> "Expected terminal symbol 30 , but found: 24 at 64" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 64 -> "Expected terminal symbol 31 , but found: 24 at 64" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 64 -> "Expected terminal symbol 33 , but found: 24 at 64" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 64 -> "Expected terminal symbol 34 , but found: 24 at 64" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 64 -> "Expected terminal symbol 32 , but found: 24 at 64" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 64 -> "Expected terminal symbol 35 , but found: 24 at 64" : comparison operator: 0 exit
(24) 64 -> "Expected terminal symbol 30 , but found: 24 at 64" : logic expression loop: 0 exit
(24) 64 -> 64 : logic expression: 1 exit
(39.2) 63 -> 64 : expression: 0 exit
expression: 1 enter
expression loop: 0 enter
logic operator: 0 enter
(24) 64 -> "Expected terminal symbol 38 , but found: 24 at 64" : logic operator: 0 exit
logic operator: 0 enter
(24) 64 -> "Expected terminal symbol 37 , but found: 24 at 64" : logic operator: 0 exit
(24) 64 -> "Expected terminal symbol 38 , but found: 24 at 64" : expression loop: 0 exit
(24) 64 -> 64 : expression: 1 exit
(39.2) 63 -> 64 : assignment: 2 exit
(39.3) 61 -> 64 : operator: 0 exit
(39.3) 61 -> 64 : operator section: 0 exit
(39.3) 61 -> 64 : conditional: 3 exit
conditional: 4 enter
(24) 64 -> "Expected terminal symbol 9 , but found: 24 at 64" : conditional: 4 exit
conditional: 0 enter
(8) 56 -> 57 : conditional: 0 exit
conditional: 1 enter
expression: 0 enter
(39.2) 57 -> "Expected terminal symbol 36 , but found: 39.2 at 57" : expression: 0 exit
expression: 0 enter
logic expression: 0 enter
(39.2) 57 -> "Expected terminal symbol 36 , but found: 39.2 at 57" : logic expression: 0 exit
logic expression: 0 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.2) 57 -> 58 : multiplication: 0 exit
(39.2) 57 -> 58 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(32) 58 -> "Expected terminal symbol 21 , but found: 32 at 58" : addition loop multi: 0 exit
addition loop multi: 0 enter
(32) 58 -> "Expected terminal symbol 21 , but found: 32 at 58" : addition loop multi: 0 exit
addition loop multi: 0 enter
(32) 58 -> "Expected terminal symbol 21 , but found: 32 at 58" : addition loop multi: 0 exit
(32) 58 -> 58 : addition: 1 exit
(39.2) 57 -> 58 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(32) 58 -> "Expected terminal symbol 19 , but found: 32 at 58" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(32) 58 -> "Expected terminal symbol 19 , but found: 32 at 58" : comparison loop plus: 0 exit
(32) 58 -> 58 : comparison: 1 exit
(39.2) 57 -> 58 : logic expression: 0 exit
logic expression: 1 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(32) 58 -> "Expected terminal symbol 30 , but found: 32 at 58" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 58 -> "Expected terminal symbol 31 , but found: 32 at 58" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 58 -> "Expected terminal symbol 33 , but found: 32 at 58" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 58 -> "Expected terminal symbol 34 , but found: 32 at 58" : comparison operator: 0 exit
comparison operator: 0 enter
(32) 58 -> 59 : comparison operator: 0 exit
(32) 58 -> 59 : logic expression loop: 0 exit
logic expression loop: 1 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.3) 59 -> 60 : multiplication: 0 exit
(39.3) 59 -> 60 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(10) 60 -> "Expected terminal symbol 21 , but found: 10 at 60" : addition loop multi: 0 exit
addition loop multi: 0 enter
(10) 60 -> "Expected terminal symbol 21 , but found: 10 at 60" : addition loop multi: 0 exit
addition loop multi: 0 enter
(10) 60 -> "Expected terminal symbol 21 , but found: 10 at 60" : addition loop multi: 0 exit
(10) 60 -> 60 : addition: 1 exit
(39.3) 59 -> 60 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(10) 60 -> "Expected terminal symbol 19 , but found: 10 at 60" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(10) 60 -> "Expected terminal symbol 19 , but found: 10 at 60" : comparison loop plus: 0 exit
(10) 60 -> 60 : comparison: 1 exit
(39.3) 59 -> 60 : logic expression loop: 1 exit
logic expression loop: 2 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(10) 60 -> "Expected terminal symbol 30 , but found: 10 at 60" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 60 -> "Expected terminal symbol 31 , but found: 10 at 60" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 60 -> "Expected terminal symbol 33 , but found: 10 at 60" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 60 -> "Expected terminal symbol 34 , but found: 10 at 60" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 60 -> "Expected terminal symbol 32 , but found: 10 at 60" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 60 -> "Expected terminal symbol 35 , but found: 10 at 60" : comparison operator: 0 exit
(10) 60 -> "Expected terminal symbol 30 , but found: 10 at 60" : logic expression loop: 0 exit
(10) 60 -> 60 : logic expression loop: 2 exit
(32) 58 -> 60 : logic expression: 1 exit
(39.2) 57 -> 60 : expression: 0 exit
expression: 1 enter
expression loop: 0 enter
logic operator: 0 enter
(10) 60 -> "Expected terminal symbol 38 , but found: 10 at 60" : logic operator: 0 exit
logic operator: 0 enter
(10) 60 -> "Expected terminal symbol 37 , but found: 10 at 60" : logic operator: 0 exit
(10) 60 -> "Expected terminal symbol 38 , but found: 10 at 60" : expression loop: 0 exit
(10) 60 -> 60 : expression: 1 exit
(39.2) 57 -> 60 : conditional: 1 exit
conditional: 2 enter
(10) 60 -> 61 : conditional: 2 exit
conditional: 3 enter
operator section: 0 enter
(39.3) 61 -> "Expected terminal symbol 6 , but found: 39.3 at 61" : operator section: 0 exit
operator section: 0 enter
operator: 0 enter
assignment: 0 enter
(39.3) 61 -> 62 : assignment: 0 exit
assignment: 1 enter
(18) 62 -> 63 : assignment: 1 exit
assignment: 2 enter
expression: 0 enter
(39.2) 63 -> "Expected terminal symbol 36 , but found: 39.2 at 63" : expression: 0 exit
expression: 0 enter
logic expression: 0 enter
(39.2) 63 -> "Expected terminal symbol 36 , but found: 39.2 at 63" : logic expression: 0 exit
logic expression: 0 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.2) 63 -> 64 : multiplication: 0 exit
(39.2) 63 -> 64 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(24) 64 -> "Expected terminal symbol 21 , but found: 24 at 64" : addition loop multi: 0 exit
addition loop multi: 0 enter
(24) 64 -> "Expected terminal symbol 21 , but found: 24 at 64" : addition loop multi: 0 exit
addition loop multi: 0 enter
(24) 64 -> "Expected terminal symbol 21 , but found: 24 at 64" : addition loop multi: 0 exit
(24) 64 -> 64 : addition: 1 exit
(39.2) 63 -> 64 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(24) 64 -> "Expected terminal symbol 19 , but found: 24 at 64" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(24) 64 -> "Expected terminal symbol 19 , but found: 24 at 64" : comparison loop plus: 0 exit
(24) 64 -> 64 : comparison: 1 exit
(39.2) 63 -> 64 : logic expression: 0 exit
logic expression: 1 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(24) 64 -> "Expected terminal symbol 30 , but found: 24 at 64" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 64 -> "Expected terminal symbol 31 , but found: 24 at 64" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 64 -> "Expected terminal symbol 33 , but found: 24 at 64" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 64 -> "Expected terminal symbol 34 , but found: 24 at 64" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 64 -> "Expected terminal symbol 32 , but found: 24 at 64" : comparison operator: 0 exit
comparison operator: 0 enter
(24) 64 -> "Expected terminal symbol 35 , but found: 24 at 64" : comparison operator: 0 exit
(24) 64 -> "Expected terminal symbol 30 , but found: 24 at 64" : logic expression loop: 0 exit
(24) 64 -> 64 : logic expression: 1 exit
(39.2) 63 -> 64 : expression: 0 exit
expression: 1 enter
expression loop: 0 enter
logic operator: 0 enter
(24) 64 -> "Expected terminal symbol 38 , but found: 24 at 64" : logic operator: 0 exit
logic operator: 0 enter
(24) 64 -> "Expected terminal symbol 37 , but found: 24 at 64" : logic operator: 0 exit
(24) 64 -> "Expected terminal symbol 38 , but found: 24 at 64" : expression loop: 0 exit
(24) 64 -> 64 : expression: 1 exit
(39.2) 63 -> 64 : assignment: 2 exit
(39.3) 61 -> 64 : operator: 0 exit
(39.3) 61 -> 64 : operator section: 0 exit
(39.3) 61 -> 64 : conditional: 3 exit
(8) 56 -> 64 : operator: 0 exit
(8) 56 -> 64 : operator list: 0 exit
operator list: 1 enter
operator list loop: 0 enter
(24) 64 -> 65 : operator list loop: 0 exit
operator list loop: 1 enter
operator: 0 enter
assignment: 0 enter
(8) 65 -> "Expected identifier or literal, but found: 8 at 65" : assignment: 0 exit
(8) 65 -> "Expected identifier or literal, but found: 8 at 65" : operator: 0 exit
operator: 0 enter
conditional: 0 enter
(8) 65 -> 66 : conditional: 0 exit
conditional: 1 enter
expression: 0 enter
(39.1) 66 -> "Expected terminal symbol 36 , but found: 39.1 at 66" : expression: 0 exit
expression: 0 enter
logic expression: 0 enter
(39.1) 66 -> "Expected terminal symbol 36 , but found: 39.1 at 66" : logic expression: 0 exit
logic expression: 0 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.1) 66 -> 67 : multiplication: 0 exit
(39.1) 66 -> 67 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(33) 67 -> "Expected terminal symbol 21 , but found: 33 at 67" : addition loop multi: 0 exit
addition loop multi: 0 enter
(33) 67 -> "Expected terminal symbol 21 , but found: 33 at 67" : addition loop multi: 0 exit
addition loop multi: 0 enter
(33) 67 -> "Expected terminal symbol 21 , but found: 33 at 67" : addition loop multi: 0 exit
(33) 67 -> 67 : addition: 1 exit
(39.1) 66 -> 67 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(33) 67 -> "Expected terminal symbol 19 , but found: 33 at 67" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(33) 67 -> "Expected terminal symbol 19 , but found: 33 at 67" : comparison loop plus: 0 exit
(33) 67 -> 67 : comparison: 1 exit
(39.1) 66 -> 67 : logic expression: 0 exit
logic expression: 1 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(33) 67 -> "Expected terminal symbol 30 , but found: 33 at 67" : comparison operator: 0 exit
comparison operator: 0 enter
(33) 67 -> "Expected terminal symbol 31 , but found: 33 at 67" : comparison operator: 0 exit
comparison operator: 0 enter
(33) 67 -> 68 : comparison operator: 0 exit
(33) 67 -> 68 : logic expression loop: 0 exit
logic expression loop: 1 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.4) 68 -> 69 : multiplication: 0 exit
(39.4) 68 -> 69 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(10) 69 -> "Expected terminal symbol 21 , but found: 10 at 69" : addition loop multi: 0 exit
addition loop multi: 0 enter
(10) 69 -> "Expected terminal symbol 21 , but found: 10 at 69" : addition loop multi: 0 exit
addition loop multi: 0 enter
(10) 69 -> "Expected terminal symbol 21 , but found: 10 at 69" : addition loop multi: 0 exit
(10) 69 -> 69 : addition: 1 exit
(39.4) 68 -> 69 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(10) 69 -> "Expected terminal symbol 19 , but found: 10 at 69" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(10) 69 -> "Expected terminal symbol 19 , but found: 10 at 69" : comparison loop plus: 0 exit
(10) 69 -> 69 : comparison: 1 exit
(39.4) 68 -> 69 : logic expression loop: 1 exit
logic expression loop: 2 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(10) 69 -> "Expected terminal symbol 30 , but found: 10 at 69" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 69 -> "Expected terminal symbol 31 , but found: 10 at 69" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 69 -> "Expected terminal symbol 33 , but found: 10 at 69" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 69 -> "Expected terminal symbol 34 , but found: 10 at 69" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 69 -> "Expected terminal symbol 32 , but found: 10 at 69" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 69 -> "Expected terminal symbol 35 , but found: 10 at 69" : comparison operator: 0 exit
(10) 69 -> "Expected terminal symbol 30 , but found: 10 at 69" : logic expression loop: 0 exit
(10) 69 -> 69 : logic expression loop: 2 exit
(33) 67 -> 69 : logic expression: 1 exit
(39.1) 66 -> 69 : expression: 0 exit
expression: 1 enter
expression loop: 0 enter
logic operator: 0 enter
(10) 69 -> "Expected terminal symbol 38 , but found: 10 at 69" : logic operator: 0 exit
logic operator: 0 enter
(10) 69 -> "Expected terminal symbol 37 , but found: 10 at 69" : logic operator: 0 exit
(10) 69 -> "Expected terminal symbol 38 , but found: 10 at 69" : expression loop: 0 exit
(10) 69 -> 69 : expression: 1 exit
(39.1) 66 -> 69 : conditional: 1 exit
conditional: 2 enter
(10) 69 -> 70 : conditional: 2 exit
conditional: 3 enter
operator section: 0 enter
(39.4) 70 -> "Expected terminal symbol 6 , but found: 39.4 at 70" : operator section: 0 exit
operator section: 0 enter
operator: 0 enter
assignment: 0 enter
(39.4) 70 -> 71 : assignment: 0 exit
assignment: 1 enter
(18) 71 -> 72 : assignment: 1 exit
assignment: 2 enter
expression: 0 enter
(39.1) 72 -> "Expected terminal symbol 36 , but found: 39.1 at 72" : expression: 0 exit
expression: 0 enter
logic expression: 0 enter
(39.1) 72 -> "Expected terminal symbol 36 , but found: 39.1 at 72" : logic expression: 0 exit
logic expression: 0 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.1) 72 -> 73 : multiplication: 0 exit
(39.1) 72 -> 73 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(7) 73 -> "Expected terminal symbol 21 , but found: 7 at 73" : addition loop multi: 0 exit
addition loop multi: 0 enter
(7) 73 -> "Expected terminal symbol 21 , but found: 7 at 73" : addition loop multi: 0 exit
addition loop multi: 0 enter
(7) 73 -> "Expected terminal symbol 21 , but found: 7 at 73" : addition loop multi: 0 exit
(7) 73 -> 73 : addition: 1 exit
(39.1) 72 -> 73 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(7) 73 -> "Expected terminal symbol 19 , but found: 7 at 73" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(7) 73 -> "Expected terminal symbol 19 , but found: 7 at 73" : comparison loop plus: 0 exit
(7) 73 -> 73 : comparison: 1 exit
(39.1) 72 -> 73 : logic expression: 0 exit
logic expression: 1 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(7) 73 -> "Expected terminal symbol 30 , but found: 7 at 73" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 73 -> "Expected terminal symbol 31 , but found: 7 at 73" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 73 -> "Expected terminal symbol 33 , but found: 7 at 73" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 73 -> "Expected terminal symbol 34 , but found: 7 at 73" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 73 -> "Expected terminal symbol 32 , but found: 7 at 73" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 73 -> "Expected terminal symbol 35 , but found: 7 at 73" : comparison operator: 0 exit
(7) 73 -> "Expected terminal symbol 30 , but found: 7 at 73" : logic expression loop: 0 exit
(7) 73 -> 73 : logic expression: 1 exit
(39.1) 72 -> 73 : expression: 0 exit
expression: 1 enter
expression loop: 0 enter
logic operator: 0 enter
(7) 73 -> "Expected terminal symbol 38 , but found: 7 at 73" : logic operator: 0 exit
logic operator: 0 enter
(7) 73 -> "Expected terminal symbol 37 , but found: 7 at 73" : logic operator: 0 exit
(7) 73 -> "Expected terminal symbol 38 , but found: 7 at 73" : expression loop: 0 exit
(7) 73 -> 73 : expression: 1 exit
(39.1) 72 -> 73 : assignment: 2 exit
(39.4) 70 -> 73 : operator: 0 exit
(39.4) 70 -> 73 : operator section: 0 exit
(39.4) 70 -> 73 : conditional: 3 exit
conditional: 4 enter
(7) 73 -> "Expected terminal symbol 9 , but found: 7 at 73" : conditional: 4 exit
conditional: 0 enter
(8) 65 -> 66 : conditional: 0 exit
conditional: 1 enter
expression: 0 enter
(39.1) 66 -> "Expected terminal symbol 36 , but found: 39.1 at 66" : expression: 0 exit
expression: 0 enter
logic expression: 0 enter
(39.1) 66 -> "Expected terminal symbol 36 , but found: 39.1 at 66" : logic expression: 0 exit
logic expression: 0 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.1) 66 -> 67 : multiplication: 0 exit
(39.1) 66 -> 67 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(33) 67 -> "Expected terminal symbol 21 , but found: 33 at 67" : addition loop multi: 0 exit
addition loop multi: 0 enter
(33) 67 -> "Expected terminal symbol 21 , but found: 33 at 67" : addition loop multi: 0 exit
addition loop multi: 0 enter
(33) 67 -> "Expected terminal symbol 21 , but found: 33 at 67" : addition loop multi: 0 exit
(33) 67 -> 67 : addition: 1 exit
(39.1) 66 -> 67 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(33) 67 -> "Expected terminal symbol 19 , but found: 33 at 67" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(33) 67 -> "Expected terminal symbol 19 , but found: 33 at 67" : comparison loop plus: 0 exit
(33) 67 -> 67 : comparison: 1 exit
(39.1) 66 -> 67 : logic expression: 0 exit
logic expression: 1 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(33) 67 -> "Expected terminal symbol 30 , but found: 33 at 67" : comparison operator: 0 exit
comparison operator: 0 enter
(33) 67 -> "Expected terminal symbol 31 , but found: 33 at 67" : comparison operator: 0 exit
comparison operator: 0 enter
(33) 67 -> 68 : comparison operator: 0 exit
(33) 67 -> 68 : logic expression loop: 0 exit
logic expression loop: 1 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.4) 68 -> 69 : multiplication: 0 exit
(39.4) 68 -> 69 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(10) 69 -> "Expected terminal symbol 21 , but found: 10 at 69" : addition loop multi: 0 exit
addition loop multi: 0 enter
(10) 69 -> "Expected terminal symbol 21 , but found: 10 at 69" : addition loop multi: 0 exit
addition loop multi: 0 enter
(10) 69 -> "Expected terminal symbol 21 , but found: 10 at 69" : addition loop multi: 0 exit
(10) 69 -> 69 : addition: 1 exit
(39.4) 68 -> 69 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(10) 69 -> "Expected terminal symbol 19 , but found: 10 at 69" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(10) 69 -> "Expected terminal symbol 19 , but found: 10 at 69" : comparison loop plus: 0 exit
(10) 69 -> 69 : comparison: 1 exit
(39.4) 68 -> 69 : logic expression loop: 1 exit
logic expression loop: 2 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(10) 69 -> "Expected terminal symbol 30 , but found: 10 at 69" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 69 -> "Expected terminal symbol 31 , but found: 10 at 69" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 69 -> "Expected terminal symbol 33 , but found: 10 at 69" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 69 -> "Expected terminal symbol 34 , but found: 10 at 69" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 69 -> "Expected terminal symbol 32 , but found: 10 at 69" : comparison operator: 0 exit
comparison operator: 0 enter
(10) 69 -> "Expected terminal symbol 35 , but found: 10 at 69" : comparison operator: 0 exit
(10) 69 -> "Expected terminal symbol 30 , but found: 10 at 69" : logic expression loop: 0 exit
(10) 69 -> 69 : logic expression loop: 2 exit
(33) 67 -> 69 : logic expression: 1 exit
(39.1) 66 -> 69 : expression: 0 exit
expression: 1 enter
expression loop: 0 enter
logic operator: 0 enter
(10) 69 -> "Expected terminal symbol 38 , but found: 10 at 69" : logic operator: 0 exit
logic operator: 0 enter
(10) 69 -> "Expected terminal symbol 37 , but found: 10 at 69" : logic operator: 0 exit
(10) 69 -> "Expected terminal symbol 38 , but found: 10 at 69" : expression loop: 0 exit
(10) 69 -> 69 : expression: 1 exit
(39.1) 66 -> 69 : conditional: 1 exit
conditional: 2 enter
(10) 69 -> 70 : conditional: 2 exit
conditional: 3 enter
operator section: 0 enter
(39.4) 70 -> "Expected terminal symbol 6 , but found: 39.4 at 70" : operator section: 0 exit
operator section: 0 enter
operator: 0 enter
assignment: 0 enter
(39.4) 70 -> 71 : assignment: 0 exit
assignment: 1 enter
(18) 71 -> 72 : assignment: 1 exit
assignment: 2 enter
expression: 0 enter
(39.1) 72 -> "Expected terminal symbol 36 , but found: 39.1 at 72" : expression: 0 exit
expression: 0 enter
logic expression: 0 enter
(39.1) 72 -> "Expected terminal symbol 36 , but found: 39.1 at 72" : logic expression: 0 exit
logic expression: 0 enter
comparison: 0 enter
addition: 0 enter
multiplication: 0 enter
(39.1) 72 -> 73 : multiplication: 0 exit
(39.1) 72 -> 73 : addition: 0 exit
addition: 1 enter
addition loop multi: 0 enter
(7) 73 -> "Expected terminal symbol 21 , but found: 7 at 73" : addition loop multi: 0 exit
addition loop multi: 0 enter
(7) 73 -> "Expected terminal symbol 21 , but found: 7 at 73" : addition loop multi: 0 exit
addition loop multi: 0 enter
(7) 73 -> "Expected terminal symbol 21 , but found: 7 at 73" : addition loop multi: 0 exit
(7) 73 -> 73 : addition: 1 exit
(39.1) 72 -> 73 : comparison: 0 exit
comparison: 1 enter
comparison loop plus: 0 enter
(7) 73 -> "Expected terminal symbol 19 , but found: 7 at 73" : comparison loop plus: 0 exit
comparison loop plus: 0 enter
(7) 73 -> "Expected terminal symbol 19 , but found: 7 at 73" : comparison loop plus: 0 exit
(7) 73 -> 73 : comparison: 1 exit
(39.1) 72 -> 73 : logic expression: 0 exit
logic expression: 1 enter
logic expression loop: 0 enter
comparison operator: 0 enter
(7) 73 -> "Expected terminal symbol 30 , but found: 7 at 73" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 73 -> "Expected terminal symbol 31 , but found: 7 at 73" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 73 -> "Expected terminal symbol 33 , but found: 7 at 73" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 73 -> "Expected terminal symbol 34 , but found: 7 at 73" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 73 -> "Expected terminal symbol 32 , but found: 7 at 73" : comparison operator: 0 exit
comparison operator: 0 enter
(7) 73 -> "Expected terminal symbol 35 , but found: 7 at 73" : comparison operator: 0 exit
(7) 73 -> "Expected terminal symbol 30 , but found: 7 at 73" : logic expression loop: 0 exit
(7) 73 -> 73 : logic expression: 1 exit
(39.1) 72 -> 73 : expression: 0 exit
expression: 1 enter
expression loop: 0 enter
logic operator: 0 enter
(7) 73 -> "Expected terminal symbol 38 , but found: 7 at 73" : logic operator: 0 exit
logic operator: 0 enter
(7) 73 -> "Expected terminal symbol 37 , but found: 7 at 73" : logic operator: 0 exit
(7) 73 -> "Expected terminal symbol 38 , but found: 7 at 73" : expression loop: 0 exit
(7) 73 -> 73 : expression: 1 exit
(39.1) 72 -> 73 : assignment: 2 exit
(39.4) 70 -> 73 : operator: 0 exit
(39.4) 70 -> 73 : operator section: 0 exit
(39.4) 70 -> 73 : conditional: 3 exit
(8) 65 -> 73 : operator: 0 exit
(8) 65 -> 73 : operator list loop: 1 exit
operator list loop: 2 enter
operator list loop: 0 enter
(7) 73 -> "Expected terminal symbol 24 , but found: 7 at 73" : operator list loop: 0 exit
(7) 73 -> 73 : operator list loop: 2 exit
(24) 64 -> 73 : operator list: 1 exit
(8) 56 -> 73 : operator section: 1 exit
operator section: 2 enter
(7) 73 -> 74 : operator section: 2 exit
(6) 55 -> 74 : conditional: 5 exit
(8) 30 -> 74 : operator: 0 exit
(8) 30 -> 74 : operator list loop: 1 exit
operator list loop: 2 enter
operator list loop: 0 enter
(24) 74 -> 75 : operator list loop: 0 exit
operator list loop: 1 enter
operator: 0 enter
assignment: 0 enter
(17) 75 -> "Expected identifier or literal, but found: 17 at 75" : assignment: 0 exit
(17) 75 -> "Expected identifier or literal, but found: 17 at 75" : operator: 0 exit
operator: 0 enter
conditional: 0 enter
(17) 75 -> "Expected terminal symbol 8 , but found: 17 at 75" : conditional: 0 exit
conditional: 0 enter
(17) 75 -> "Expected terminal symbol 8 , but found: 17 at 75" : conditional: 0 exit
(17) 75 -> "Expected terminal symbol 8 , but found: 17 at 75" : operator: 0 exit
operator: 0 enter
loop: 0 enter
(17) 75 -> "Expected terminal symbol 12 , but found: 17 at 75" : loop: 0 exit
(17) 75 -> "Expected terminal symbol 12 , but found: 17 at 75" : operator: 0 exit
operator: 0 enter
input: 0 enter
(17) 75 -> "Expected terminal symbol 16 , but found: 17 at 75" : input: 0 exit
(17) 75 -> "Expected terminal symbol 16 , but found: 17 at 75" : operator: 0 exit
operator: 0 enter
output: 0 enter
(17) 75 -> 76 : output: 0 exit
output: 1 enter
(27) 76 -> 77 : output: 1 exit
output: 2 enter
variable list: 0 enter
(39.3) 77 -> 78 : variable list: 0 exit
variable list: 1 enter
variable list loop: 0 enter
(25) 78 -> 79 : variable list loop: 0 exit
variable list loop: 1 enter
(39.4) 79 -> 80 : variable list loop: 1 exit
variable list loop: 2 enter
variable list loop: 0 enter
(28) 80 -> "Expected terminal symbol 25 , but found: 28 at 80" : variable list loop: 0 exit
(28) 80 -> 80 : variable list loop: 2 exit
(25) 78 -> 80 : variable list: 1 exit
(39.3) 77 -> 80 : output: 2 exit
output: 3 enter
(28) 80 -> 81 : output: 3 exit
(17) 75 -> 81 : operator: 0 exit
(17) 75 -> 81 : operator list loop: 1 exit
operator list loop: 2 enter
operator list loop: 0 enter
(7) 81 -> "Expected terminal symbol 24 , but found: 7 at 81" : operator list loop: 0 exit
(7) 81 -> 81 : operator list loop: 2 exit
(24) 74 -> 81 : operator list loop: 2 exit
(24) 29 -> 81 : operator list loop: 2 exit
(24) 25 -> 81 : operator list loop: 2 exit
(24) 21 -> 81 : operator list: 1 exit
(16) 15 -> 81 : operator section: 1 exit
operator section: 2 enter
(7) 81 -> 82 : operator section: 2 exit
(6) 14 -> 82 : main: 4 exit
main: 5 enter
(26) 82 -> 83 : main: 5 exit

Syntax analysis result:
0 39.0 24 1 39.1 25 39.2 25 39.3 25 39.4 29 3 24 6 16 27 39.1 25 39.2 28 24 39.3 18 40.10 24 39.4 18 40.0 24 8 39.1 32 39.2 10 6 8 39.1 32 39.3 10 39.3 18 39.1 24 8 39.2 33 39.4 10 39.4 18 39.2 7 9 6 8 39.2 32 39.3 10 39.3 18 39.2 24 8 39.1 33 39.4 10 39.4 18 39.1 7 24 17 27 39.3 25 39.4 28 7 26
Analyzing: main
null | operation list | null
Analyzing: operation list
null | operation | ;
; | operation list | null
null | operation | null
Analyzing: operation
null | input | null
null | output | null
Analyzing: input
null | read
read | (
( | variable list | )
Analyzing: variable list
null | analyzer identifier
analyzer identifier | ,
, | variable list | null
null | analyzer identifier
Analyzing: output
null | write
write | (
( | variable list | )
Analyzed symbols:

Result:

read EQUAL (
read EQUAL (
write EQUAL (
write EQUAL (
; LOWER read
; LOWER read
; LOWER write
; LOWER write
; LOWER ;
; LOWER ;
, HIGHER )
, HIGHER )
, HIGHER )
, HIGHER )
, LOWER id
, LOWER id
( EQUAL )
( EQUAL )
( EQUAL )
( EQUAL )
( LOWER id
( LOWER id
( LOWER id
( LOWER id
) HIGHER ;
) HIGHER ;
id EQUAL ,
id EQUAL ,
id HIGHER )
id HIGHER )
id HIGHER )
id HIGHER )
Analyzing: main
null | header | ;
; | description section | ;
; | operator section | .
Analyzing: header
null | program
program | program name | null
Analyzing: program name
null | analyzer identifier
Analyzing: description section
null | var
var | variable list | :
: | variable type | description section loop | null
Analyzing: variable list
null | analyzer identifier
analyzer identifier | variable list loop | null
Analyzing: variable list loop
null | ,
, | analyzer identifier
analyzer identifier | variable list loop | null
null | null
Analyzing: variable type
null | integer
null | real
null | char
null | string
Analyzing: description section loop
null | ;
; | variable list | :
: | variable type | description section loop | null
null | null
Analyzing: operator section
null | begin
begin | operator list | end
null | operator | null
Analyzing: operator list
null | operator | operator list loop | null
Analyzing: operator
null | assignment | null
null | conditional | null
null | loop | null
null | input | null
null | output | null
Analyzing: assignment
null | analyzer identifier
analyzer identifier | :=
:= | expression | null
Analyzing: expression
null | not
not | expression | null
null | logic expression | expression loop | null
Analyzing: logic expression
null | not
not | logic expression | null
null | comparison | logic expression loop | null
Analyzing: comparison
null | addition | comparison loop plus | null
null | comparison | comparison loop minus | null
Analyzing: addition
null | multiplication | addition loop multi | null
null | multiplication | addition loop div | null
null | multiplication | addition loop mod | null
Analyzing: multiplication
null | analyzer identifier
null | analyzer literal
null | (
( | expression | )
Analyzing: expression loop
null | logic operator | logic expression | expression loop | null
null | null
Analyzing: logic operator
null | and
null | or
Analyzing: logic expression loop
null | comparison operator | comparison | logic expression loop | null
null | null
Analyzing: comparison operator
null | =
null | <>
null | <
null | <=
null | >
null | >=
Analyzing: addition loop multi
null | *
* | multiplication | addition loop multi | null
null | *
* | multiplication | addition loop div | null
null | *
* | multiplication | addition loop mod | null
null | null
Analyzing: addition loop div
null | div
div | multiplication | addition loop multi | null
null | div
div | multiplication | addition loop div | null
null | div
div | multiplication | addition loop mod | null
null | null
Analyzing: addition loop mod
null | mod
mod | multiplication | addition loop multi | null
null | mod
mod | multiplication | addition loop div | null
null | mod
mod | multiplication | addition loop mod | null
null | null
Analyzing: comparison loop plus
null | +
+ | addition | comparison loop plus | null
null | +
+ | addition | comparison loop minus | null
null | null
Analyzing: comparison loop minus
null | -
- | addition | comparison loop plus | null
null | -
- | addition | comparison loop minus | null
null | null
Analyzing: conditional
null | if
if | expression | then
then | operator section | else
else | operator section | null
null | if
if | expression | then
then | operator section | null
Analyzing: loop
null | for
for | loop body | do
do | operator section | null
Analyzing: loop body
null | assignment | to
to | expression | null
null | assignment | downto
downto | expression | null
Analyzing: input
null | read
read | (
( | variable list | )
Analyzing: output
null | write
write | (
( | variable list | )
Analyzing: operator list loop
null | ;
; | operator | operator list loop | null
null | null
Analyzed symbols:

Result:

program HIGHER ;
program HIGHER ;
program LOWER id
program LOWER id
var EQUAL :
var EQUAL :
var LOWER id
var LOWER id
then LOWER for
then LOWER for
then LOWER for
then LOWER for
then LOWER read
then LOWER read
then LOWER read
then LOWER read
then LOWER write
then LOWER write
then LOWER write
then LOWER write
then HIGHER .
then HIGHER .
then LOWER id
then LOWER id
then LOWER id
then LOWER id
then LOWER begin
then LOWER begin
then LOWER begin
then LOWER begin
then HIGHER end
then HIGHER end
then LOWER if
then LOWER if
then LOWER if
then LOWER if
then EQUAL else
then EQUAL else
then HIGHER else
then HIGHER else
for LOWER to
for LOWER to
for LOWER downto
for LOWER downto
for EQUAL do
for EQUAL do
for LOWER id
for LOWER id
to HIGHER do
to HIGHER do
to LOWER +
to LOWER +
to LOWER -
to LOWER -
to LOWER *
to LOWER *
to LOWER div
to LOWER div
to LOWER mod
to LOWER mod
to LOWER (
to LOWER (
to LOWER =
to LOWER =
to LOWER <>
to LOWER <>
to LOWER >
to LOWER >
to LOWER <
to LOWER <
to LOWER <=
to LOWER <=
to LOWER >=
to LOWER >=
to LOWER not
to LOWER not
to LOWER or
to LOWER or
to LOWER and
to LOWER and
to LOWER id
to LOWER id
to LOWER lit
to LOWER lit
downto HIGHER do
downto HIGHER do
downto LOWER +
downto LOWER +
downto LOWER -
downto LOWER -
downto LOWER *
downto LOWER *
downto LOWER div
downto LOWER div
downto LOWER mod
downto LOWER mod
downto LOWER (
downto LOWER (
downto LOWER =
downto LOWER =
downto LOWER <>
downto LOWER <>
downto LOWER >
downto LOWER >
downto LOWER <
downto LOWER <
downto LOWER <=
downto LOWER <=
downto LOWER >=
downto LOWER >=
downto LOWER not
downto LOWER not
downto LOWER or
downto LOWER or
downto LOWER and
downto LOWER and
downto LOWER id
downto LOWER id
downto LOWER lit
downto LOWER lit
do HIGHER .
do HIGHER .
do LOWER begin
do LOWER begin
do HIGHER end
do HIGHER end
do HIGHER else
do HIGHER else
read EQUAL (
read EQUAL (
write EQUAL (
write EQUAL (
:= HIGHER to
:= HIGHER to
:= HIGHER downto
:= HIGHER downto
:= LOWER +
:= LOWER +
:= LOWER -
:= LOWER -
:= LOWER *
:= LOWER *
:= LOWER div
:= LOWER div
:= LOWER mod
:= LOWER mod
:= HIGHER .
:= HIGHER .
:= LOWER (
:= LOWER (
:= LOWER =
:= LOWER =
:= LOWER <>
:= LOWER <>
:= LOWER >
:= LOWER >
:= LOWER <
:= LOWER <
:= LOWER <=
:= LOWER <=
:= LOWER >=
:= LOWER >=
:= LOWER not
:= LOWER not
:= LOWER or
:= LOWER or
:= LOWER and
:= LOWER and
:= LOWER id
:= LOWER id
:= LOWER lit
:= LOWER lit
:= HIGHER end
:= HIGHER end
:= HIGHER else
:= HIGHER else
+ HIGHER then
+ HIGHER then
+ HIGHER then
+ HIGHER then
+ HIGHER to
+ HIGHER to
+ HIGHER downto
+ HIGHER downto
+ HIGHER do
+ HIGHER do
+ LOWER +
+ LOWER +
+ LOWER -
+ LOWER -
+ LOWER *
+ LOWER *
+ LOWER *
+ LOWER *
+ LOWER div
+ LOWER div
+ LOWER div
+ LOWER div
+ LOWER mod
+ LOWER mod
+ LOWER mod
+ LOWER mod
+ HIGHER .
+ HIGHER .
+ LOWER (
+ LOWER (
+ LOWER (
+ LOWER (
+ HIGHER )
+ HIGHER )
+ LOWER id
+ LOWER id
+ LOWER id
+ LOWER id
+ LOWER lit
+ LOWER lit
+ LOWER lit
+ LOWER lit
+ HIGHER end
+ HIGHER end
+ HIGHER else
+ HIGHER else
integer HIGHER ;
integer HIGHER ;
- HIGHER then
- HIGHER then
- HIGHER then
- HIGHER then
- HIGHER to
- HIGHER to
- HIGHER downto
- HIGHER downto
- HIGHER do
- HIGHER do
- LOWER +
- LOWER +
- LOWER -
- LOWER -
- LOWER *
- LOWER *
- LOWER *
- LOWER *
- LOWER div
- LOWER div
- LOWER div
- LOWER div
- LOWER mod
- LOWER mod
- LOWER mod
- LOWER mod
- HIGHER .
- HIGHER .
- LOWER (
- LOWER (
- LOWER (
- LOWER (
- HIGHER )
- HIGHER )
- LOWER id
- LOWER id
- LOWER id
- LOWER id
- LOWER lit
- LOWER lit
- LOWER lit
- LOWER lit
- HIGHER end
- HIGHER end
- HIGHER else
- HIGHER else
* HIGHER then
* HIGHER then
* HIGHER then
* HIGHER then
* HIGHER to
* HIGHER to
* HIGHER downto
* HIGHER downto
* HIGHER do
* HIGHER do
* LOWER *
* LOWER *
* LOWER div
* LOWER div
* LOWER mod
* LOWER mod
* HIGHER .
* HIGHER .
* LOWER (
* LOWER (
* LOWER (
* LOWER (
* LOWER (
* LOWER (
* HIGHER )
* HIGHER )
* LOWER id
* LOWER id
* LOWER id
* LOWER id
* LOWER id
* LOWER id
* LOWER lit
* LOWER lit
* LOWER lit
* LOWER lit
* LOWER lit
* LOWER lit
* HIGHER end
* HIGHER end
* HIGHER else
* HIGHER else
div HIGHER then
div HIGHER then
div HIGHER then
div HIGHER then
div HIGHER to
div HIGHER to
div HIGHER downto
div HIGHER downto
div HIGHER do
div HIGHER do
div LOWER *
div LOWER *
div LOWER div
div LOWER div
div LOWER mod
div LOWER mod
div HIGHER .
div HIGHER .
div LOWER (
div LOWER (
div LOWER (
div LOWER (
div LOWER (
div LOWER (
div HIGHER )
div HIGHER )
div LOWER id
div LOWER id
div LOWER id
div LOWER id
div LOWER id
div LOWER id
div LOWER lit
div LOWER lit
div LOWER lit
div LOWER lit
div LOWER lit
div LOWER lit
div HIGHER end
div HIGHER end
div HIGHER else
div HIGHER else
mod HIGHER then
mod HIGHER then
mod HIGHER then
mod HIGHER then
mod HIGHER to
mod HIGHER to
mod HIGHER downto
mod HIGHER downto
mod HIGHER do
mod HIGHER do
mod LOWER *
mod LOWER *
mod LOWER div
mod LOWER div
mod LOWER mod
mod LOWER mod
mod HIGHER .
mod HIGHER .
mod LOWER (
mod LOWER (
mod LOWER (
mod LOWER (
mod LOWER (
mod LOWER (
mod HIGHER )
mod HIGHER )
mod LOWER id
mod LOWER id
mod LOWER id
mod LOWER id
mod LOWER id
mod LOWER id
mod LOWER lit
mod LOWER lit
mod LOWER lit
mod LOWER lit
mod LOWER lit
mod LOWER lit
mod HIGHER end
mod HIGHER end
mod HIGHER else
mod HIGHER else
; LOWER var
; LOWER var
; LOWER for
; LOWER for
; LOWER for
; LOWER for
; LOWER read
; LOWER read
; LOWER read
; LOWER read
; LOWER write
; LOWER write
; LOWER write
; LOWER write
; EQUAL ;
; EQUAL ;
; LOWER ;
; LOWER ;
; EQUAL .
; EQUAL .
; EQUAL :
; EQUAL :
; LOWER id
; LOWER id
; LOWER id
; LOWER id
; LOWER id
; LOWER id
; LOWER begin
; LOWER begin
; HIGHER end
; HIGHER end
; LOWER if
; LOWER if
; LOWER if
; LOWER if
, EQUAL id
, EQUAL id
( LOWER +
( LOWER +
( LOWER -
( LOWER -
( LOWER *
( LOWER *
( LOWER div
( LOWER div
( LOWER mod
( LOWER mod
( LOWER (
( LOWER (
( EQUAL )
( EQUAL )
( EQUAL )
( EQUAL )
( EQUAL )
( EQUAL )
( LOWER =
( LOWER =
( LOWER <>
( LOWER <>
( LOWER >
( LOWER >
( LOWER <
( LOWER <
( LOWER <=
( LOWER <=
( LOWER >=
( LOWER >=
( LOWER not
( LOWER not
( LOWER or
( LOWER or
( LOWER and
( LOWER and
( LOWER id
( LOWER id
( LOWER id
( LOWER id
( LOWER id
( LOWER id
( LOWER lit
( LOWER lit
) HIGHER then
) HIGHER then
) HIGHER then
) HIGHER then
) HIGHER to
) HIGHER to
) HIGHER downto
) HIGHER downto
) HIGHER do
) HIGHER do
) HIGHER .
) HIGHER .
) HIGHER )
) HIGHER )
) HIGHER end
) HIGHER end
) HIGHER else
) HIGHER else
: LOWER integer
: LOWER integer
: LOWER integer
: LOWER integer
: LOWER ;
: LOWER ;
: LOWER ;
: LOWER ;
: HIGHER ;
: HIGHER ;
: LOWER real
: LOWER real
: LOWER real
: LOWER real
: LOWER char
: LOWER char
: LOWER char
: LOWER char
: LOWER string
: LOWER string
: LOWER string
: LOWER string
real HIGHER ;
real HIGHER ;
= HIGHER then
= HIGHER then
= HIGHER then
= HIGHER then
= HIGHER to
= HIGHER to
= HIGHER downto
= HIGHER downto
= HIGHER do
= HIGHER do
= HIGHER .
= HIGHER .
= HIGHER )
= HIGHER )
= HIGHER end
= HIGHER end
= HIGHER else
= HIGHER else
<> HIGHER then
<> HIGHER then
<> HIGHER then
<> HIGHER then
<> HIGHER to
<> HIGHER to
<> HIGHER downto
<> HIGHER downto
<> HIGHER do
<> HIGHER do
<> HIGHER .
<> HIGHER .
<> HIGHER )
<> HIGHER )
<> HIGHER end
<> HIGHER end
<> HIGHER else
<> HIGHER else
> HIGHER then
> HIGHER then
> HIGHER then
> HIGHER then
> HIGHER to
> HIGHER to
> HIGHER downto
> HIGHER downto
> HIGHER do
> HIGHER do
> HIGHER .
> HIGHER .
> HIGHER )
> HIGHER )
> HIGHER end
> HIGHER end
> HIGHER else
> HIGHER else
< HIGHER then
< HIGHER then
< HIGHER then
< HIGHER then
< HIGHER to
< HIGHER to
< HIGHER downto
< HIGHER downto
< HIGHER do
< HIGHER do
< HIGHER .
< HIGHER .
< HIGHER )
< HIGHER )
< HIGHER end
< HIGHER end
< HIGHER else
< HIGHER else
<= HIGHER then
<= HIGHER then
<= HIGHER then
<= HIGHER then
<= HIGHER to
<= HIGHER to
<= HIGHER downto
<= HIGHER downto
<= HIGHER do
<= HIGHER do
<= HIGHER .
<= HIGHER .
<= HIGHER )
<= HIGHER )
<= HIGHER end
<= HIGHER end
<= HIGHER else
<= HIGHER else
>= HIGHER then
>= HIGHER then
>= HIGHER then
>= HIGHER then
>= HIGHER to
>= HIGHER to
>= HIGHER downto
>= HIGHER downto
>= HIGHER do
>= HIGHER do
>= HIGHER .
>= HIGHER .
>= HIGHER )
>= HIGHER )
>= HIGHER end
>= HIGHER end
>= HIGHER else
>= HIGHER else
not HIGHER then
not HIGHER then
not HIGHER then
not HIGHER then
not HIGHER to
not HIGHER to
not HIGHER downto
not HIGHER downto
not HIGHER do
not HIGHER do
not LOWER +
not LOWER +
not LOWER +
not LOWER +
not LOWER -
not LOWER -
not LOWER -
not LOWER -
not LOWER *
not LOWER *
not LOWER *
not LOWER *
not LOWER div
not LOWER div
not LOWER div
not LOWER div
not LOWER mod
not LOWER mod
not LOWER mod
not LOWER mod
not HIGHER .
not HIGHER .
not LOWER (
not LOWER (
not LOWER (
not LOWER (
not HIGHER )
not HIGHER )
not LOWER =
not LOWER =
not LOWER =
not LOWER =
not LOWER <>
not LOWER <>
not LOWER <>
not LOWER <>
not LOWER >
not LOWER >
not LOWER >
not LOWER >
not LOWER <
not LOWER <
not LOWER <
not LOWER <
not LOWER <=
not LOWER <=
not LOWER <=
not LOWER <=
not LOWER >=
not LOWER >=
not LOWER >=
not LOWER >=
not LOWER not
not LOWER not
not LOWER not
not LOWER not
not LOWER or
not LOWER or
not LOWER and
not LOWER and
not LOWER id
not LOWER id
not LOWER id
not LOWER id
not LOWER lit
not LOWER lit
not LOWER lit
not LOWER lit
not HIGHER end
not HIGHER end
not HIGHER else
not HIGHER else
or HIGHER then
or HIGHER then
or HIGHER then
or HIGHER then
or HIGHER to
or HIGHER to
or HIGHER downto
or HIGHER downto
or HIGHER do
or HIGHER do
or HIGHER .
or HIGHER .
or HIGHER )
or HIGHER )
or HIGHER end
or HIGHER end
or HIGHER else
or HIGHER else
and HIGHER then
and HIGHER then
and HIGHER then
and HIGHER then
and HIGHER to
and HIGHER to
and HIGHER downto
and HIGHER downto
and HIGHER do
and HIGHER do
and HIGHER .
and HIGHER .
and HIGHER )
and HIGHER )
and HIGHER end
and HIGHER end
and HIGHER else
and HIGHER else
id HIGHER then
id HIGHER then
id HIGHER then
id HIGHER then
id HIGHER to
id HIGHER to
id HIGHER downto
id HIGHER downto
id HIGHER do
id HIGHER do
id EQUAL :=
id EQUAL :=
id HIGHER ;
id HIGHER ;
id LOWER ,
id LOWER ,
id LOWER ,
id LOWER ,
id HIGHER .
id HIGHER .
id HIGHER )
id HIGHER )
id HIGHER )
id HIGHER )
id HIGHER )
id HIGHER )
id HIGHER :
id HIGHER :
id HIGHER :
id HIGHER :
id HIGHER end
id HIGHER end
id HIGHER else
id HIGHER else
char HIGHER ;
char HIGHER ;
lit HIGHER then
lit HIGHER then
lit HIGHER then
lit HIGHER then
lit HIGHER to
lit HIGHER to
lit HIGHER downto
lit HIGHER downto
lit HIGHER do
lit HIGHER do
lit HIGHER .
lit HIGHER .
lit HIGHER )
lit HIGHER )
lit HIGHER end
lit HIGHER end
lit HIGHER else
lit HIGHER else
string HIGHER ;
string HIGHER ;
begin LOWER for
begin LOWER for
begin LOWER read
begin LOWER read
begin LOWER write
begin LOWER write
begin LOWER ;
begin LOWER ;
begin LOWER id
begin LOWER id
begin EQUAL end
begin EQUAL end
begin LOWER if
begin LOWER if
end HIGHER .
end HIGHER .
end HIGHER end
end HIGHER end
end HIGHER else
end HIGHER else
if EQUAL then
if EQUAL then
if EQUAL then
if EQUAL then
if LOWER +
if LOWER +
if LOWER +
if LOWER +
if LOWER -
if LOWER -
if LOWER -
if LOWER -
if LOWER *
if LOWER *
if LOWER *
if LOWER *
if LOWER div
if LOWER div
if LOWER div
if LOWER div
if LOWER mod
if LOWER mod
if LOWER mod
if LOWER mod
if LOWER (
if LOWER (
if LOWER (
if LOWER (
if LOWER =
if LOWER =
if LOWER =
if LOWER =
if LOWER <>
if LOWER <>
if LOWER <>
if LOWER <>
if LOWER >
if LOWER >
if LOWER >
if LOWER >
if LOWER <
if LOWER <
if LOWER <
if LOWER <
if LOWER <=
if LOWER <=
if LOWER <=
if LOWER <=
if LOWER >=
if LOWER >=
if LOWER >=
if LOWER >=
if LOWER not
if LOWER not
if LOWER not
if LOWER not
if LOWER or
if LOWER or
if LOWER or
if LOWER or
if LOWER and
if LOWER and
if LOWER and
if LOWER and
if LOWER id
if LOWER id
if LOWER id
if LOWER id
if LOWER lit
if LOWER lit
if LOWER lit
if LOWER lit
else LOWER for
else LOWER for
else LOWER read
else LOWER read
else LOWER write
else LOWER write
else HIGHER .
else HIGHER .
else LOWER id
else LOWER id
else LOWER begin
else LOWER begin
else HIGHER end
else HIGHER end
else LOWER if
else LOWER if
else HIGHER else
else HIGHER else
